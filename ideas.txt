Algoritmo Top-Down

Create <path>

    Para cada archivo PDF en la carpeta:
        Crear un TRIE y un HASH para el PDF.
        Función 1: Separar el texto en palabras.
        Función 2: Determinar si la palabra es clasificable.
        Si la palabra es clasificable:
            Función 3: Normalizar la palabra.
            Función 4: Buscar palabra asociada en el TRIE. Si no existe, agregarla.
            Función 5: Actualizar el valor en el HASH según lo entregado por la Función 4.
        Resultado: TRIES y HASHES por cada PDF.

Search <texto>

    Criterios de Semántica:
        Base de datos de palabras clave.
    Procesar texto de búsqueda:
        Usar Funciones 2, 3, y 4.
        Comparar similitud con cada HASH.
    Resultados:
        Lista de % de correspondencia.
        Ordenar y presentar la lista.

Funciones

    Función 1: Separar palabras usando .split(' ').
    Función 2: Determinar si una palabra es clasificable.
    Función 3: Normalizar palabras:
        Quitar prefijos.
        Convertir a minúsculas.
        Quitar tildes.
    Función 4: Buscar o agregar palabra en TRIE:
        Si se encuentra una palabra asociada, devolverla.
        Si no, agregar la palabra y devolverla.
    Función 5: Actualizar HASH:
        Si la palabra existe, actualizar su valor.
        Si no, agregarla con valor inicial.

Conceptos

    Clasificable: No es un artículo, conector, o proposición.
    Palabra asociada: Una palabra que contiene al menos la mitad de los caracteres de otra en orden.

Ideas

    Usar with para manejar archivos.
    Utilizar yaml si es necesario.
    Serialización con pickle.dump.

Procedimiento Final

    Crear TRIES y HASHES para cada PDF.
    Procesar texto de búsqueda y calcular similitud.
    Ordenar resultados y presentarlos.